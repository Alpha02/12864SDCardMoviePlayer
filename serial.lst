C51 COMPILER V9.00   SERIAL                                                                08/25/2013 08:37:31 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SERIAL
OBJECT MODULE PLACED IN .\serial.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil\C51\BIN\C51.EXE ..\【高能】60s2常见功能的顶级封装\serial.c BROWSE INCDI
                    -R(..\【高能】60s2常见功能的顶级封装) DEBUG OBJECTEXTEND PRINT(.\serial.lst) OBJECT(.\serial.obj)

line level    source

   1          
   2          #include "serial.h"
   3          void Serial_Init(){
   4   1              
   5   1              SCON=0x50;//选择方式一
   6   1              TMOD|=0x20;//定时器一，工作方式2
   7   1              TH1=0xFD;//设置波特率  //波特率一律9600
   8   1              TL1=0xFD;//
   9   1              PCON=0x00;
  10   1              TR1=1;//启动定时器一
  11   1              #ifdef RECV_EN
                              ES=1;
                              EA=1;
                      #endif
  15   1      
  16   1      }
  17          
  18          void send(uchar s){
  19   1              TR0=0;
  20   1              SBUF=s;//装载数据到串口缓冲     
  21   1              while(TI==0);//查询发送完成标志，完成时该标志位置高
  22   1              TR0=1;
  23   1              TI=0;//清楚发送完成标志位
  24   1      }
  25          void send_str(unsigned char * pd)   //发送字符串，直到遇到0才结束
  26          {
  27   1               while((*pd)!='\0') 
  28   1               {
  29   2                send(*pd); //发送一个字符
  30   2                pd++;  //移动到下一个字符
  31   2               }
  32   1      }
  33          void send_ln()          //发送回车
  34          {
  35   1              send_str("\r\n");
  36   1      }
  37          void send_tab()         //发送制表符
  38          {
  39   1      
  40   1              send_str("\x09");
  41   1      }
  42          void send_uint(uint num)        //发送整数
  43          {
  44   1              
  45   1              unsigned int temp,i=0,j;
  46   1              temp=num;
  47   1              do{
  48   2                      temp=temp/10;
  49   2                      i++;
  50   2              }while(temp>0);
  51   1              while(i>0){
  52   2                      j=i;
  53   2                      temp=1;
  54   2                      while(j>1){j--;temp*=10;}
C51 COMPILER V9.00   SERIAL                                                                08/25/2013 08:37:31 PAGE 2   

  55   2                      send(num/temp+'0');
  56   2                      num-=(num/temp)*temp;
  57   2                      i--;
  58   2              }
  59   1      }
  60          void send_int(int num)          //发送整数
  61          {
  62   1              
  63   1              unsigned int temp,i=0,j;
  64   1              if(num<0){send('-');num=-num;} //处理成正数
  65   1              temp=num;
  66   1              do{
  67   2                      temp=temp/10;
  68   2                      i++;
  69   2              }while(temp>0);
  70   1              while(i>0){
  71   2                      j=i;
  72   2                      temp=1;
  73   2                      while(j>1){j--;temp*=10;}
  74   2                      send(num/temp+'0');
  75   2                      num-=(num/temp)*temp;
  76   2                      i--;
  77   2              }
  78   1      }
  79          void send_ulong(ulong num)      //发送整数
  80          {
  81   1              
  82   1              unsigned int temp,i=0,j;
  83   1              temp=num;
  84   1              do{
  85   2                      temp=temp/10;
  86   2                      i++;
  87   2              }while(temp>0);
  88   1              while(i>0){
  89   2                      j=i;
  90   2                      temp=1;
  91   2                      while(j>1){j--;temp*=10;}
  92   2                      send(num/temp+'0');
  93   2                      num-=(num/temp)*temp;
  94   2                      i--;
  95   2              }
  96   1      }
  97          void send_long(long num)        //发送整数
  98          {
  99   1              
 100   1              unsigned int temp,i=0,j;
 101   1              if(num<0){send('-');num=-num;} //处理成正数
 102   1              temp=num;
 103   1              do{
 104   2                      temp=temp/10;
 105   2                      i++;
 106   2              }while(temp>0);
 107   1              while(i>0){
 108   2                      j=i;
 109   2                      temp=1;
 110   2                      while(j>1){j--;temp*=10;}
 111   2                      send(num/temp+'0');
 112   2                      num-=(num/temp)*temp;
 113   2                      i--;
 114   2              }
 115   1      }
 116          void send_float(float num,uchar precise)        //发送浮点数，precise标识精度
C51 COMPILER V9.00   SERIAL                                                                08/25/2013 08:37:31 PAGE 3   

 117          {
 118   1              uint temp;
 119   1              if(num<0){send('-');num=-num;} //处理成正数     
 120   1              if(num>=1){
 121   2                      temp=(int)num;
 122   2                      send_int(temp);
 123   2                      num=num-temp;
 124   2                      precise--;
 125   2              }else{
 126   2                      send('0');
 127   2              }
 128   1              send('.');
 129   1              num=num*10;
 130   1              while(precise>0){
 131   2                      precise--;
 132   2                      temp=(int)num;
 133   2                      send(temp+'0');
 134   2                      num=(num-temp)*10;      
 135   2              }
 136   1      }
 137          void send_week(uchar week){
 138   1              switch(week){
 139   2              case 1:send_str("Monday");break;
 140   2              case 2:send_str("Tuesday");break;
 141   2              case 3:send_str("Wednesday");break;
 142   2              case 4:send_str("Thursday");break;
 143   2              case 5:send_str("Friday");break;
 144   2              case 6:send_str("Saturday");break;
 145   2              case 7:send_str("Sunday");break;
 146   2              default:send_str("Week_ERROR");break;
 147   2              }
 148   1      }
 149          #ifdef RECV_EN
              uchar xdata Serial_Recv_Ptr=0;
              uchar xdata Serial_Proc_Ptr=0;
              bit Serial_Empty=1;
              bit Serial_Full=0;
              bit Serial_DataErr=0;
              
              uchar xdata Serial_Recv_Buff[SERIAL_BUFF_LENGTH];
              uchar xdata Serial_Data_Width;
              uchar Serial_get_uchar(){
                      uchar temp_ch;
                      if(Serial_Empty){
                              //如果缓冲区为空则读取失败
                              Serial_DataErr=1;
                              return 0;
                      }       
              
                      temp_ch=Serial_Recv_Buff[Serial_Proc_Ptr++];
              
                      if(Serial_Full==1){Serial_Full=0;}//清满标志位
                      if(Serial_Proc_Ptr>=SERIAL_BUFF_LENGTH)Serial_Proc_Ptr=0;//循环指针
                      if(Serial_Recv_Ptr==Serial_Proc_Ptr){
                      //如果指针相遇，则标识串口缓冲区为空。
                              Serial_Empty=1; 
                      }
                      return temp_ch;                                                                                 
              }
              uint Serial_get_uint(){
              //以十进制（BCD码）方式读取一个uint
                      uint temp_uint=0;
C51 COMPILER V9.00   SERIAL                                                                08/25/2013 08:37:31 PAGE 4   

                      uchar temp_ch;
                      delay(10);
                      //delay使数据完全装载到缓冲区
              
                      //第一个数据不能是空格或换行。在此之上检测其合法性
                      temp_ch=Serial_get_uchar();
                      if(Serial_DataErr)return 0;//如果出错则返回
              
                      while(temp_ch<=32 && (!Serial_Empty)){  //32是空格
                              temp_ch=Serial_get_uchar();
                      }
                      
                      if(temp_ch>'9' || temp_ch<'0'){
                              Serial_DataErr=1;
                              return 0;
                      }       
                      while(temp_ch!=' ' && temp_ch!=10 && temp_ch!=13){  //10,13是换行符，这个当做空格处理
                              if(temp_ch>'9' || temp_ch<'0'){
                              //如果得到了奇怪的数字或getChar失败则出错返回。
                                      Serial_DataErr=1;
                                      return 0;
                              }       
                              temp_uint=temp_uint*10+temp_ch-'0';                     
                              if(Serial_Empty)break;  //如果已经取到空，则返回。因为之前的delay，数据已经完全装载。
                              temp_ch=Serial_get_uchar();             
                      }
                      return temp_uint;
              }
              void Serial_getline(uchar * str){
              //以十进制（BCD码）方式读取一个string
                      uchar temp_ch;
                      uint i=0;
                      delay(10);
                      //delay使数据完全装载到缓冲区
                      //第一个数据不能是空格或换行。在此之上检测其合法性
                      temp_ch=Serial_get_uchar();
                      if(Serial_DataErr)return;//如果出错则返回
                      while(temp_ch<=13 && (!Serial_Empty)){//一直扫描到没有换行的地方开始读
                              temp_ch=Serial_get_uchar();
                      }
                      str[i++]=temp_ch;
                      while(str[i-1]!=10 && str[i-1]!=13){  //10,13是换行符，这个略过处理
                              if(Serial_Empty)break;  //如果已经取到空，则返回。因为之前的delay，数据已经完全装载。
                              str[i++]=Serial_get_uchar();
                      }
                      str[i]=0;//加上串尾符
              }
              
              void Serial_Interrupt() interrupt 4  //uart中断 ，4为串口中断
              {
                if(RI==1)  //收到数据
                {      
                   if(!Serial_Full){Serial_Recv_Buff[Serial_Recv_Ptr++]=SBUF;} //接收缓冲区收到数据
                       if(Serial_Recv_Ptr==Serial_Proc_Ptr)Serial_Full=1;//如果写满，则置位。
                       if(Serial_Recv_Ptr>=SERIAL_BUFF_LENGTH)Serial_Recv_Ptr=0;//循环指针
                       if(Serial_Empty==1){Serial_Empty=0;}//清串口缓冲区为空的标志位。
                       RI=0;   //收到清0
                }
              }
              #endif


C51 COMPILER V9.00   SERIAL                                                                08/25/2013 08:37:31 PAGE 5   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1195    ----
   CONSTANT SIZE    =     73    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      31
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
